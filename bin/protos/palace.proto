syntax = "proto3";
package palace;

message Card {
    enum Type {
        BASIC = 0;
        REVERSE = 1;
        BOMB = 2;
        HIGHER_LOWER = 3;
        WILD = 4;
        TOP_SWAP = 5;
        HAND_SWAP = 6;
        DISCARD_OR_ROCK = 7;
    }

    Type type = 1;
    string id = 2;
    int32 value = 3;
    bool hidden = 4;
    int32 playerIndex = 5;
    bool activated = 6;
}

message Tower {
    repeated Card cards = 1;
}

message CardIDs {
    repeated string ids = 1;
}

message HigherLowerChoice {
    enum Type {
        HIGHER = 0;
        LOWER = 1;
    }

    Type choice = 1;
    int32 value = 2;
}

message DealTowerInfo {
    repeated Tower topTowers = 1;
    repeated Tower bottomTowers = 2;
}

message SecondDealTowerInfo {
    repeated Tower topTowers = 1;
}

message PlayFromHandInfo {
    int32 userIndex = 1;
    repeated Card cards = 2;
}

message DiscardInfo {
    repeated Card cards = 1;
}

message DrawInfo {
    int32 userIndex = 1;
    repeated Card cards = 2;
}

message PickUpPileInfo {
    int32 userIndex = 1;
    repeated Card cards = 2;
}

message Hand {
    repeated Card cards = 1;
}

message TowerCardsToHandInfo {
    int32 userIndex = 1;
    repeated string cardIDs = 2;
}

message FinalDealInfo {
    repeated Hand hands = 1;
}

message TopSwapInfo {
    Card card1 = 1;
    Card card2 = 2;
}

message HandSwapInfo {
    int32 userIndex1 = 1;
    int32 userIndex2 = 2;
    repeated Card cards1 = 3;
    repeated Card cards2 = 4;
}

message LoginCredentials {
    string userID = 1;
    string passCode = 2;
}

message LobbyInfo {
    string host = 1;
    repeated PlayerEntry players = 2;
    bool canStart = 3;
    bool canJoin = 4;
}

message PlayerEntry {
    string userID = 1;
    bool ready = 2;
}

message UserIDs {
    repeated string ids = 1;
}

message SimpleInfo {
    string info = 1;
}

message SocketMessage {

    enum Type {
        // To client
        ERROR = 0;
        LOGIN_SUCCESSFUL = 1;
        FRIEND_REQUEST = 2;
        MATCH_INVITE = 3;
        MATCH_INVITE_CANCEL = 4;
        MATCH_START = 5;
        FIRST_DEAL_TOWER_INFO = 6;
        SECOND_DEAL_TOWER_INFO = 7;
        FINAL_DEAL_INFO = 8;
        TOWER_CARD_IDS_TO_HAND = 9;
        SET_SELECTABLE_CARDS = 10;
        SET_MULLIGANABLE_CARDS = 11;
        CLEAR_SELECTABLE_CARDS = 12;
        DRAW_INFO = 13;
        PLAY_FROM_HAND_INFO = 14;
        PICK_UP_PILE_INFO = 15;
        DISCARD_INFO = 16;
        REQUEST_HANDSWAP_CHOICE = 17;
        REQUEST_TOPSWAP_CHOICE = 18;
        REQUEST_HIGHERLOWER_CHOICE = 19;
        ACTIVE_PLAYER_INDEX = 20;
        FRIEND_ITEM_INFO = 21;
        LOBBY_INFO = 22;
        LOGOUT_SUCCESSFUL = 23;
        CHANGE_DISCARD_TO_ROCK = 24;
        MULLIGAN_TIMER_UPDATE = 25;
        ENABLE_PICK_UP = 26;
        DISABLE_PICK_UP = 27;
        GAME_END_INFO = 28;

        // to server
        LOGIN = 40;
        REGISTER = 41;
        ADD_FRIEND = 42;
        ACCEPT_FRIEND_REQUEST = 43;
        SEND_MATCH_INVITE = 44;
        MATCH_ACCEPT = 45;
        MATCH_DECLINE = 46;
        USER_PLAY = 47;
        HANDSWAP_CHOICE = 48;
        TOPSWAP_CHOICE = 49;
        HIGHERLOWER_CHOICE = 50;
        DECLINE_FRIEND_REQUEST = 51;
        START = 52;
        REQUEST_PICK_UP = 53;
        QUICK_JOIN = 54;
        LEAVE_GAME = 55;
        RANKED_JOIN = 56;
    }

    Type type = 1;
    string json = 2;
}

message ActivePlayerIndex {
    int32 index = 1;
}

message FriendItemInfo {
    string userID = 1;
    bool online = 2;
    bool invitable = 3;
    string statusText = 4;
    string color = 5;
}

message RequestHigherLowerChoiceInfo {
    int32 value = 1;
}

message GameEndInfo {
    int32 eloPre = 1;
    int32 eloChanged = 2;
    int32 eloPost = 3;
}

message HandSwapChoiceInfo {
    repeated CardIDs hands = 1;
}